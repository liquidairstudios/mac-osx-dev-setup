" Setting the default color scheme
set t_Co=256
set background=dark
colorscheme gruvbox
let g:gruvbox_contrast_dark = "hard"
let g:airline_left_sep = ""		
let g:airline_left_alt_sep = ""		
let g:airline_right_sep = ""		
let g:airline_right_alt_sep = ""

" Shortcut to rapidly toggle `set list`
nnoremap <silent> <leader>si :set list!<CR>

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

" ====== Key bindings

" Diffoff
nnoremap <leader>D :diffoff!<cr>

" Prettify json
" comes with yajl, install: brew install yajl
" I don't use pythons json tool because it sorts the keys
command JSONFormat execute "%!json_reformat"

" Use git rebase -i shortcuts
" originaly developed by totherme
" https://github.com/totherme/vimtweaks
autocmd FileType gitrebase map <C-J> ddjP
autocmd FileType gitrebase map <C-K> ddkP
autocmd FileType gitrebase map p 0cwp <ESC>
autocmd FileType gitrebase map r 0cwr <ESC>
autocmd FileType gitrebase map e 0cwe <ESC>
autocmd FileType gitrebase map s 0cws <ESC>
autocmd FileType gitrebase map f 0cwf <ESC>
autocmd FileType gitrebase map x 0cwx <ESC>

" ======= Plugins Configuration

" Golang plugin
let g:go_highlight_space_tab_error = 0
let g:go_highlight_array_whitespace_error = 0
let g:go_highlight_trailing_whitespace_error = 0
let g:go_highlight_extra_types = 0
let g:go_highlight_operators = 0
let g:go_fmt_fail_silently = 0
let g:go_autodetect_gopath = 1

au FileType go nmap <Leader>s <Plug>(go-def-split)
au FileType go nmap <Leader>v <Plug>(go-def-vertical)
au FileType go nmap <Leader>in <Plug>(go-info)
au FileType go nmap <Leader>ii <Plug>(go-implements)

au FileType go nmap <leader>r <Plug>(go-run)
au FileType go nmap <leader>rt <Plug>(go-run-tab)
au FileType go nmap <Leader>rs <Plug>(go-run-split)
au FileType go nmap <Leader>rv <Plug>(go-run-vertical)

au FileType go nmap <leader>b  <Plug>(go-build)
au FileType go nmap <leader>g  <Plug>(go-gbbuild)
au FileType go nmap <leader>t  <Plug>(go-test-compile)
au FileType go nmap <Leader>d <Plug>(go-doc)
au FileType go nmap <Leader>f :GoImports<CR>
